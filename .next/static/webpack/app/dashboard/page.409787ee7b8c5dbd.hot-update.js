"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./components/order/order-pdf.tsx":
/*!****************************************!*\
  !*** ./components/order/order-pdf.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateOrderPDF: function() { return /* binding */ generateOrderPDF; }\n/* harmony export */ });\n/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspdf */ \"(app-pages-browser)/./node_modules/jspdf/dist/jspdf.es.min.js\");\n/* harmony import */ var date_fns_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! date-fns/format */ \"(app-pages-browser)/./node_modules/date-fns/format.mjs\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./lib/supabase.ts\");\n\n\n\nasync function generateOrderPDF(param) {\n    let { orderNumber, orderDetails, contactDetails, imageKeys } = param;\n    const doc = new jspdf__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    // Define colors\n    const primaryColor = \"#FF69B4\"; // Hot Pink\n    const secondaryColor = \"#8A2BE2\"; // Blue Violet\n    // Add logo\n    const logoUrl = \"api/images/logo.png\"; // Replace with your actual logo path\n    doc.addImage(logoUrl, \"PNG\", 10, 10, 30, 30);\n    // Title\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.setFontSize(28);\n    doc.setTextColor(primaryColor);\n    doc.text(\"Cakes4U\", 105, 30, {\n        align: \"center\"\n    });\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.setFontSize(20);\n    doc.setTextColor(secondaryColor);\n    doc.text(\"Order Summary #\".concat(orderNumber), 105, 45, {\n        align: \"center\"\n    });\n    // Decorative line\n    doc.setDrawColor(primaryColor);\n    doc.setLineWidth(0.5);\n    doc.line(10, 50, 200, 50);\n    // Order Details Section\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.setFontSize(16);\n    doc.setTextColor(primaryColor);\n    doc.text(\"Order Details\", 10, 65);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.setFontSize(12);\n    doc.setTextColor(0, 0, 0);\n    let yPos = 75;\n    const lineHeight = 7;\n    const addDetailLine = (label, value)=>{\n        doc.setFont(\"helvetica\", \"bold\");\n        doc.text(\"\".concat(label, \":\"), 10, yPos);\n        doc.setFont(\"helvetica\", \"normal\");\n        doc.text(value, 50, yPos);\n        yPos += lineHeight;\n    };\n    addDetailLine(\"Type\", orderDetails.type);\n    addDetailLine(\"Servings\", orderDetails.servings.toString());\n    addDetailLine(\"Occasion\", orderDetails.occasion);\n    addDetailLine(\"Delivery Date\", (0,date_fns_format__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(orderDetails.deliveryDate, \"PPP\"));\n    if (orderDetails.description) {\n        addDetailLine(\"Description\", orderDetails.description);\n    }\n    if (orderDetails.allergyInfo) {\n        addDetailLine(\"Allergy Info\", orderDetails.allergyInfo);\n    }\n    // Contact Details Section\n    yPos += 10;\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.setFontSize(16);\n    doc.setTextColor(primaryColor);\n    doc.text(\"Contact Information\", 10, yPos);\n    yPos += 10;\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.setFontSize(12);\n    doc.setTextColor(0, 0, 0);\n    addDetailLine(\"Name\", contactDetails.name);\n    addDetailLine(\"Email\", contactDetails.email);\n    addDetailLine(\"Phone\", contactDetails.phone);\n    addDetailLine(\"Address\", contactDetails.address);\n    // Reference Images Section\n    if (imageKeys && imageKeys.length > 0) {\n        const images = await fetchImagesFromSupabase(imageKeys);\n        doc.addPage();\n        doc.setFont(\"helvetica\", \"bold\");\n        doc.setFontSize(22);\n        doc.setTextColor(primaryColor);\n        doc.text(\"Reference Images\", 105, 20, {\n            align: \"center\"\n        });\n        doc.text(\"If the image you uploaded on our webpage isn't showing up in this file, please attach it with this file in your mail to us at cakes4ufoods@gmail.com\", 105, 35, {\n            align: \"center\"\n        });\n        // Decorative line\n        doc.setDrawColor(primaryColor);\n        doc.setLineWidth(0.5);\n        doc.line(10, 25, 200, 25);\n        let yPosition = 45;\n        const imageWidth = 80;\n        const imageHeight = 80;\n        let xPosition = 10;\n        console.log(\"Fetched Images:\", images); // Debugging the fetched images\n        const validImages = images.filter((url)=>url !== null);\n        if (validImages.length === 0) {\n            // No valid images found, add fallback text\n            console.log(\"No valid images found. Adding fallback text.\");\n            doc.setFont(\"helvetica\", \"normal\");\n            doc.setFontSize(10); // Reduced font size\n            doc.setTextColor(0, 0, 0);\n            // Adjusted positioning for the fallback message to align with other sections\n            const fallbackMessage = 'Please attach your image with this form and send it to cakes4ufoods@gmail.com with the subject \"Order #'.concat(orderNumber, '\"');\n            // Centered fallback message in the same format as the other sections\n            const messageX = 105;\n            const messageY = yPosition + lineHeight; // Positioned after any existing content\n            doc.text(fallbackMessage, messageX, messageY, {\n                align: \"center\"\n            });\n            yPosition += lineHeight * 2; // Adjust position to prevent overlap\n        } else {\n            console.log(\"Valid images found:\", validImages);\n            for(let i = 0; i < validImages.length; i++){\n                const imageUrl = validImages[i];\n                if (imageUrl) {\n                    var _imageUrl_split_pop;\n                    const imageType = (_imageUrl_split_pop = imageUrl.split(\".\").pop()) === null || _imageUrl_split_pop === void 0 ? void 0 : _imageUrl_split_pop.toUpperCase();\n                    let imageFormat = \"WEBP\"; // Default to WEBP\n                    if (imageType === \"PNG\") {\n                        imageFormat = \"PNG\";\n                    } else if (imageType === \"JPG\" || imageType === \"JPEG\") {\n                        imageFormat = \"JPG\";\n                    }\n                    console.log(\"Adding image: \".concat(imageUrl, \" as \").concat(imageFormat)); // Debugging image add\n                    doc.addImage(imageUrl, imageFormat, xPosition, yPosition, imageWidth, imageHeight);\n                    if ((i + 1) % 2 === 0) {\n                        xPosition = 10;\n                        yPosition += imageHeight + 10;\n                    } else {\n                        xPosition += imageWidth + 10;\n                    }\n                    if (yPosition + imageHeight > 280) {\n                        doc.addPage();\n                        yPosition = 20;\n                        xPosition = 10;\n                    }\n                }\n            }\n        }\n    } else {\n        // If imageKeys are empty or undefined, add fallback message directly\n        console.log(\"No image keys provided. Adding fallback text.\");\n        doc.addPage();\n        // Adjust positioning for fallback message consistency\n        let yPosition = 45;\n        const fallbackMessage = 'Please attach your image with this form and send it to cakes4ufoods@gmail.com with the subject \"Order #'.concat(orderNumber, '\"');\n        doc.setFont(\"helvetica\", \"normal\");\n        doc.setFontSize(10); // Reduced font size for fallback message\n        doc.setTextColor(0, 0, 0);\n        // Centered fallback message in the same format as other sections\n        const messageX = 105;\n        doc.text(fallbackMessage, messageX, yPosition, {\n            align: \"center\"\n        });\n    }\n    // Footer\n    doc.setFont(\"helvetica\", \"italic\");\n    doc.setFontSize(10);\n    doc.setTextColor(secondaryColor);\n    doc.text(\"Cakes4U - Making your moments sweeter!\", 105, 280, {\n        align: \"center\"\n    });\n    doc.text(\" +46 76 745 74 19 | cakes4ufoods.vercel.app\", 105, 285, {\n        align: \"center\"\n    });\n    // Save the PDF\n    doc.save(\"cakes4u-order-\".concat(orderNumber, \".pdf\"));\n}\n// Function to fetch image URLs from Supabase\nasync function fetchImagesFromSupabase(imageKeys) {\n    const signedUrls = [];\n    for (const key of imageKeys){\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.storage.from(\"order-images\").createSignedUrl(key, 60 * 60); // URL valid for 1 hour\n        if (error) {\n            console.error(\"Error fetching signed URL for \".concat(key, \":\"), error.message);\n            signedUrls.push(null);\n        } else {\n            signedUrls.push((data === null || data === void 0 ? void 0 : data.signedUrl) || null);\n        }\n    }\n    return signedUrls;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/order/order-pdf.tsx\n"));

/***/ })

});